{
  "version": "2.2",
  "vulnerabilities": [
    {
      "category": "sast",
      "name": "RSA private key",
      "message": "RSA private key",
      "description": "RSA private key detected; please remove and revoke it if this is a leak.",
      "cve": "juice-shop/lib/insecurity.js:fb90db49b1b2eeb3e2cc0096f46f492efc2e4470c1d8d9b52231886e9835850f:RSA",
      "severity": "Critical",
      "confidence": "Unknown",
      "scanner": {
        "id": "gitleaks",
        "name": "Gitleaks"
      },
      "location": {
        "file": "juice-shop/lib/insecurity.js",
        "start_line": 12,
        "end_line": 12,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "gitleaks_rule_id",
          "name": "Gitleaks rule ID RSA",
          "value": "RSA"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic secret",
      "message": "Generic secret",
      "description": "Generic secret detected; please remove and revoke it if this is a leak.",
      "cve": "juice-shop/test/api/2faSpec.js:3ce0af987d29a46291966ad961d88603faa580c37bb2c8ff885d86c22fd8b79a:Generic Secret",
      "severity": "Critical",
      "confidence": "Unknown",
      "scanner": {
        "id": "trufflehog",
        "name": "TruffleHog"
      },
      "location": {
        "file": "juice-shop/test/api/2faSpec.js",
        "start_line": 158,
        "end_line": 158,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "trufflehog_rule_id",
          "name": "TruffleHog rule ID Generic Secret",
          "value": "Generic Secret"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic secret",
      "message": "Generic secret",
      "description": "Generic secret detected; please remove and revoke it if this is a leak.",
      "cve": "juice-shop/test/e2e/totpSetupSpec.js:3ce0af987d29a46291966ad961d88603faa580c37bb2c8ff885d86c22fd8b79a:Generic Secret",
      "severity": "Critical",
      "confidence": "Unknown",
      "scanner": {
        "id": "trufflehog",
        "name": "TruffleHog"
      },
      "location": {
        "file": "juice-shop/test/e2e/totpSetupSpec.js",
        "start_line": 29,
        "end_line": 29,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "trufflehog_rule_id",
          "name": "TruffleHog rule ID Generic Secret",
          "value": "Generic Secret"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Password in URL",
      "message": "Password in URL",
      "description": "Password in URL detected; please remove and revoke it if this is a leak.",
      "cve": "scripts:40b4ab3dbf561780e69d54b0ec45150c1b8feec6ee664f05aaa7d5b2abe76210:Password in URL",
      "severity": "Critical",
      "confidence": "Unknown",
      "scanner": {
        "id": "trufflehog",
        "name": "TruffleHog"
      },
      "location": {
        "file": "scripts",
        "start_line": 32,
        "end_line": 32,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "trufflehog_rule_id",
          "name": "TruffleHog rule ID Password in URL",
          "value": "Password in URL"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/EffectComposer.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/EffectComposer.js",
        "start_line": 67,
        "end_line": 67,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 74,
        "end_line": 74,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 2,
        "end_line": 2,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 3,
        "end_line": 3,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 5,
        "end_line": 5,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 7,
        "end_line": 7,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 75,
        "end_line": 75,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 8,
        "end_line": 8,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 13,
        "end_line": 13,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 33,
        "end_line": 33,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 35,
        "end_line": 35,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 38,
        "end_line": 38,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 40,
        "end_line": 40,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 44,
        "end_line": 44,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 47,
        "end_line": 47,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 53,
        "end_line": 53,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 54,
        "end_line": 54,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 56,
        "end_line": 56,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 57,
        "end_line": 57,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 60,
        "end_line": 60,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 72,
        "end_line": 72,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Unsafe Regular Expression",
      "message": "Unsafe Regular Expression",
      "description": "Potentially unsafe regular expressions. It may take a very long time to run.",
      "cve": "juice-shop/frontend/src/assets/private/dat.gui.min.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-unsafe-regex",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/dat.gui.min.js",
        "start_line": 7,
        "end_line": 7,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-unsafe-regex",
          "value": "security/detect-unsafe-regex",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-unsafe-regex"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12152,
        "end_line": 12152,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9384,
        "end_line": 9384,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33,
        "end_line": 33,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 362,
        "end_line": 362,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 2252,
        "end_line": 2252,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 3444,
        "end_line": 3444,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 3746,
        "end_line": 3746,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 3800,
        "end_line": 3800,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4145,
        "end_line": 4145,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4151,
        "end_line": 4151,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4251,
        "end_line": 4251,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4778,
        "end_line": 4778,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4784,
        "end_line": 4784,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 4882,
        "end_line": 4882,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 5820,
        "end_line": 5820,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 5973,
        "end_line": 5973,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6028,
        "end_line": 6028,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6053,
        "end_line": 6053,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6086,
        "end_line": 6086,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6351,
        "end_line": 6351,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6355,
        "end_line": 6355,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6362,
        "end_line": 6362,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6514,
        "end_line": 6514,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6554,
        "end_line": 6554,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6555,
        "end_line": 6555,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6600,
        "end_line": 6600,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6632,
        "end_line": 6632,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6648,
        "end_line": 6648,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6779,
        "end_line": 6779,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6780,
        "end_line": 6780,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6781,
        "end_line": 6781,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6969,
        "end_line": 6969,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6971,
        "end_line": 6971,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6975,
        "end_line": 6975,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6977,
        "end_line": 6977,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 6989,
        "end_line": 6989,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7004,
        "end_line": 7004,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7036,
        "end_line": 7036,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7042,
        "end_line": 7042,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7175,
        "end_line": 7175,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7176,
        "end_line": 7176,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7177,
        "end_line": 7177,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7181,
        "end_line": 7181,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7308,
        "end_line": 7308,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7329,
        "end_line": 7329,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7333,
        "end_line": 7333,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7426,
        "end_line": 7426,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7460,
        "end_line": 7460,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7501,
        "end_line": 7501,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7505,
        "end_line": 7505,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7885,
        "end_line": 7885,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7895,
        "end_line": 7895,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7925,
        "end_line": 7925,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 7966,
        "end_line": 7966,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8008,
        "end_line": 8008,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8050,
        "end_line": 8050,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8185,
        "end_line": 8185,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8295,
        "end_line": 8295,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8296,
        "end_line": 8296,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8313,
        "end_line": 8313,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8314,
        "end_line": 8314,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8315,
        "end_line": 8315,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8331,
        "end_line": 8331,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8332,
        "end_line": 8332,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8334,
        "end_line": 8334,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8337,
        "end_line": 8337,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8339,
        "end_line": 8339,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8340,
        "end_line": 8340,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8393,
        "end_line": 8393,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8415,
        "end_line": 8415,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8425,
        "end_line": 8425,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8437,
        "end_line": 8437,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8451,
        "end_line": 8451,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8456,
        "end_line": 8456,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8466,
        "end_line": 8466,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8495,
        "end_line": 8495,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8502,
        "end_line": 8502,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8531,
        "end_line": 8531,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8535,
        "end_line": 8535,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8591,
        "end_line": 8591,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8592,
        "end_line": 8592,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8606,
        "end_line": 8606,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8612,
        "end_line": 8612,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8641,
        "end_line": 8641,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8651,
        "end_line": 8651,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8684,
        "end_line": 8684,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8711,
        "end_line": 8711,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8975,
        "end_line": 8975,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8976,
        "end_line": 8976,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 8977,
        "end_line": 8977,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9041,
        "end_line": 9041,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9050,
        "end_line": 9050,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9060,
        "end_line": 9060,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9181,
        "end_line": 9181,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9187,
        "end_line": 9187,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9193,
        "end_line": 9193,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9255,
        "end_line": 9255,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9327,
        "end_line": 9327,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9341,
        "end_line": 9341,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32,
        "end_line": 32,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9412,
        "end_line": 9412,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9413,
        "end_line": 9413,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9414,
        "end_line": 9414,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9418,
        "end_line": 9418,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9463,
        "end_line": 9463,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9482,
        "end_line": 9482,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9547,
        "end_line": 9547,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9548,
        "end_line": 9548,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9617,
        "end_line": 9617,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9618,
        "end_line": 9618,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9619,
        "end_line": 9619,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9621,
        "end_line": 9621,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9622,
        "end_line": 9622,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9623,
        "end_line": 9623,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9635,
        "end_line": 9635,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9636,
        "end_line": 9636,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9637,
        "end_line": 9637,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9641,
        "end_line": 9641,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9663,
        "end_line": 9663,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9673,
        "end_line": 9673,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9685,
        "end_line": 9685,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9686,
        "end_line": 9686,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9687,
        "end_line": 9687,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9691,
        "end_line": 9691,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9744,
        "end_line": 9744,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9755,
        "end_line": 9755,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9760,
        "end_line": 9760,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9768,
        "end_line": 9768,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9788,
        "end_line": 9788,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9794,
        "end_line": 9794,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9795,
        "end_line": 9795,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9830,
        "end_line": 9830,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9836,
        "end_line": 9836,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9859,
        "end_line": 9859,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9861,
        "end_line": 9861,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9863,
        "end_line": 9863,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9871,
        "end_line": 9871,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9875,
        "end_line": 9875,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9876,
        "end_line": 9876,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9877,
        "end_line": 9877,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9888,
        "end_line": 9888,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9889,
        "end_line": 9889,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9901,
        "end_line": 9901,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9913,
        "end_line": 9913,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9924,
        "end_line": 9924,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 9930,
        "end_line": 9930,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10019,
        "end_line": 10019,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10026,
        "end_line": 10026,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10031,
        "end_line": 10031,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10057,
        "end_line": 10057,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10083,
        "end_line": 10083,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10098,
        "end_line": 10098,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10118,
        "end_line": 10118,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10130,
        "end_line": 10130,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10136,
        "end_line": 10136,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10156,
        "end_line": 10156,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10172,
        "end_line": 10172,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10174,
        "end_line": 10174,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10178,
        "end_line": 10178,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10195,
        "end_line": 10195,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10197,
        "end_line": 10197,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10198,
        "end_line": 10198,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10199,
        "end_line": 10199,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10201,
        "end_line": 10201,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10202,
        "end_line": 10202,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10218,
        "end_line": 10218,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10222,
        "end_line": 10222,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10235,
        "end_line": 10235,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10237,
        "end_line": 10237,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10238,
        "end_line": 10238,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10254,
        "end_line": 10254,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10279,
        "end_line": 10279,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10280,
        "end_line": 10280,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10286,
        "end_line": 10286,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10287,
        "end_line": 10287,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10288,
        "end_line": 10288,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10290,
        "end_line": 10290,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10291,
        "end_line": 10291,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10292,
        "end_line": 10292,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10314,
        "end_line": 10314,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10315,
        "end_line": 10315,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10316,
        "end_line": 10316,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10318,
        "end_line": 10318,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10319,
        "end_line": 10319,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10320,
        "end_line": 10320,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10326,
        "end_line": 10326,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10327,
        "end_line": 10327,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10337,
        "end_line": 10337,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10341,
        "end_line": 10341,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10343,
        "end_line": 10343,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10345,
        "end_line": 10345,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10354,
        "end_line": 10354,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10355,
        "end_line": 10355,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10358,
        "end_line": 10358,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10377,
        "end_line": 10377,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10381,
        "end_line": 10381,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10442,
        "end_line": 10442,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10456,
        "end_line": 10456,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10471,
        "end_line": 10471,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10487,
        "end_line": 10487,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10502,
        "end_line": 10502,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10512,
        "end_line": 10512,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10541,
        "end_line": 10541,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10544,
        "end_line": 10544,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10546,
        "end_line": 10546,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10547,
        "end_line": 10547,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10548,
        "end_line": 10548,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10553,
        "end_line": 10553,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10566,
        "end_line": 10566,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10579,
        "end_line": 10579,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10591,
        "end_line": 10591,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10597,
        "end_line": 10597,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10629,
        "end_line": 10629,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10634,
        "end_line": 10634,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10638,
        "end_line": 10638,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10642,
        "end_line": 10642,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10646,
        "end_line": 10646,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10648,
        "end_line": 10648,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10649,
        "end_line": 10649,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10653,
        "end_line": 10653,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10659,
        "end_line": 10659,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10660,
        "end_line": 10660,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10668,
        "end_line": 10668,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10670,
        "end_line": 10670,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10686,
        "end_line": 10686,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10694,
        "end_line": 10694,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10702,
        "end_line": 10702,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 10706,
        "end_line": 10706,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11291,
        "end_line": 11291,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11299,
        "end_line": 11299,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11305,
        "end_line": 11305,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11397,
        "end_line": 11397,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11409,
        "end_line": 11409,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11440,
        "end_line": 11440,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11446,
        "end_line": 11446,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11450,
        "end_line": 11450,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11454,
        "end_line": 11454,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11456,
        "end_line": 11456,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11457,
        "end_line": 11457,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11463,
        "end_line": 11463,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11474,
        "end_line": 11474,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11475,
        "end_line": 11475,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11481,
        "end_line": 11481,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11487,
        "end_line": 11487,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 11745,
        "end_line": 11745,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12074,
        "end_line": 12074,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12080,
        "end_line": 12080,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12122,
        "end_line": 12122,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12149,
        "end_line": 12149,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12151,
        "end_line": 12151,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 38213,
        "end_line": 38213,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12163,
        "end_line": 12163,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12164,
        "end_line": 12164,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12179,
        "end_line": 12179,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12195,
        "end_line": 12195,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12210,
        "end_line": 12210,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12223,
        "end_line": 12223,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12257,
        "end_line": 12257,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12259,
        "end_line": 12259,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12270,
        "end_line": 12270,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12285,
        "end_line": 12285,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12299,
        "end_line": 12299,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12312,
        "end_line": 12312,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12322,
        "end_line": 12322,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12343,
        "end_line": 12343,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12358,
        "end_line": 12358,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12394,
        "end_line": 12394,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12395,
        "end_line": 12395,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12396,
        "end_line": 12396,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12398,
        "end_line": 12398,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12399,
        "end_line": 12399,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12404,
        "end_line": 12404,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12422,
        "end_line": 12422,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12423,
        "end_line": 12423,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12424,
        "end_line": 12424,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12426,
        "end_line": 12426,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12427,
        "end_line": 12427,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12432,
        "end_line": 12432,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12549,
        "end_line": 12549,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12551,
        "end_line": 12551,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12633,
        "end_line": 12633,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12701,
        "end_line": 12701,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12839,
        "end_line": 12839,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 12978,
        "end_line": 12978,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13038,
        "end_line": 13038,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13044,
        "end_line": 13044,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13069,
        "end_line": 13069,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13070,
        "end_line": 13070,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13078,
        "end_line": 13078,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13079,
        "end_line": 13079,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13168,
        "end_line": 13168,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13169,
        "end_line": 13169,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13192,
        "end_line": 13192,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13263,
        "end_line": 13263,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13349,
        "end_line": 13349,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13407,
        "end_line": 13407,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13408,
        "end_line": 13408,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13443,
        "end_line": 13443,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13444,
        "end_line": 13444,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13474,
        "end_line": 13474,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13475,
        "end_line": 13475,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13485,
        "end_line": 13485,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13486,
        "end_line": 13486,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13496,
        "end_line": 13496,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13498,
        "end_line": 13498,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13500,
        "end_line": 13500,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13504,
        "end_line": 13504,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13526,
        "end_line": 13526,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13527,
        "end_line": 13527,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13581,
        "end_line": 13581,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13649,
        "end_line": 13649,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13650,
        "end_line": 13650,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13686,
        "end_line": 13686,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13741,
        "end_line": 13741,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13757,
        "end_line": 13757,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13772,
        "end_line": 13772,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13786,
        "end_line": 13786,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13802,
        "end_line": 13802,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13820,
        "end_line": 13820,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13826,
        "end_line": 13826,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13832,
        "end_line": 13832,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13838,
        "end_line": 13838,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13844,
        "end_line": 13844,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13850,
        "end_line": 13850,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13856,
        "end_line": 13856,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13866,
        "end_line": 13866,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13904,
        "end_line": 13904,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13930,
        "end_line": 13930,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 13945,
        "end_line": 13945,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14016,
        "end_line": 14016,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14027,
        "end_line": 14027,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14033,
        "end_line": 14033,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14037,
        "end_line": 14037,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14041,
        "end_line": 14041,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14043,
        "end_line": 14043,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14045,
        "end_line": 14045,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14047,
        "end_line": 14047,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14051,
        "end_line": 14051,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14057,
        "end_line": 14057,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14061,
        "end_line": 14061,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14065,
        "end_line": 14065,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14067,
        "end_line": 14067,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14071,
        "end_line": 14071,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14073,
        "end_line": 14073,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14079,
        "end_line": 14079,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14080,
        "end_line": 14080,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14173,
        "end_line": 14173,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14182,
        "end_line": 14182,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14190,
        "end_line": 14190,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14191,
        "end_line": 14191,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14195,
        "end_line": 14195,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14324,
        "end_line": 14324,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14335,
        "end_line": 14335,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14348,
        "end_line": 14348,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 14352,
        "end_line": 14352,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15031,
        "end_line": 15031,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15587,
        "end_line": 15587,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15597,
        "end_line": 15597,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15599,
        "end_line": 15599,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15678,
        "end_line": 15678,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15706,
        "end_line": 15706,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15732,
        "end_line": 15732,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15736,
        "end_line": 15736,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15813,
        "end_line": 15813,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15836,
        "end_line": 15836,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15887,
        "end_line": 15887,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15919,
        "end_line": 15919,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 15948,
        "end_line": 15948,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16049,
        "end_line": 16049,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16057,
        "end_line": 16057,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16059,
        "end_line": 16059,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16078,
        "end_line": 16078,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16084,
        "end_line": 16084,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16143,
        "end_line": 16143,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16208,
        "end_line": 16208,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16225,
        "end_line": 16225,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16255,
        "end_line": 16255,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16258,
        "end_line": 16258,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16270,
        "end_line": 16270,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16287,
        "end_line": 16287,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16289,
        "end_line": 16289,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16407,
        "end_line": 16407,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16429,
        "end_line": 16429,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16456,
        "end_line": 16456,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16787,
        "end_line": 16787,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16884,
        "end_line": 16884,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 16913,
        "end_line": 16913,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17175,
        "end_line": 17175,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17183,
        "end_line": 17183,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17187,
        "end_line": 17187,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17191,
        "end_line": 17191,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17199,
        "end_line": 17199,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17203,
        "end_line": 17203,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 17207,
        "end_line": 17207,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19320,
        "end_line": 19320,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19324,
        "end_line": 19324,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19340,
        "end_line": 19340,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19342,
        "end_line": 19342,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19344,
        "end_line": 19344,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19353,
        "end_line": 19353,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19357,
        "end_line": 19357,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 19361,
        "end_line": 19361,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21384,
        "end_line": 21384,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21404,
        "end_line": 21404,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21406,
        "end_line": 21406,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21420,
        "end_line": 21420,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21426,
        "end_line": 21426,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21436,
        "end_line": 21436,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21487,
        "end_line": 21487,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21488,
        "end_line": 21488,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21518,
        "end_line": 21518,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21544,
        "end_line": 21544,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21582,
        "end_line": 21582,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21754,
        "end_line": 21754,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21760,
        "end_line": 21760,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21872,
        "end_line": 21872,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21915,
        "end_line": 21915,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21920,
        "end_line": 21920,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21928,
        "end_line": 21928,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21932,
        "end_line": 21932,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21942,
        "end_line": 21942,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21944,
        "end_line": 21944,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21954,
        "end_line": 21954,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21966,
        "end_line": 21966,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21968,
        "end_line": 21968,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21976,
        "end_line": 21976,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21978,
        "end_line": 21978,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21980,
        "end_line": 21980,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21993,
        "end_line": 21993,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21995,
        "end_line": 21995,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 21997,
        "end_line": 21997,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22009,
        "end_line": 22009,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22011,
        "end_line": 22011,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22013,
        "end_line": 22013,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22027,
        "end_line": 22027,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22029,
        "end_line": 22029,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22031,
        "end_line": 22031,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22052,
        "end_line": 22052,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22056,
        "end_line": 22056,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22068,
        "end_line": 22068,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22072,
        "end_line": 22072,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22084,
        "end_line": 22084,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22098,
        "end_line": 22098,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22106,
        "end_line": 22106,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22108,
        "end_line": 22108,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22121,
        "end_line": 22121,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22123,
        "end_line": 22123,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22135,
        "end_line": 22135,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22137,
        "end_line": 22137,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22151,
        "end_line": 22151,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22153,
        "end_line": 22153,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22190,
        "end_line": 22190,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22235,
        "end_line": 22235,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22239,
        "end_line": 22239,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22254,
        "end_line": 22254,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22258,
        "end_line": 22258,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22273,
        "end_line": 22273,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22286,
        "end_line": 22286,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22300,
        "end_line": 22300,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22308,
        "end_line": 22308,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22310,
        "end_line": 22310,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22323,
        "end_line": 22323,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22325,
        "end_line": 22325,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22337,
        "end_line": 22337,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22339,
        "end_line": 22339,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22353,
        "end_line": 22353,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22355,
        "end_line": 22355,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22472,
        "end_line": 22472,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22478,
        "end_line": 22478,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22507,
        "end_line": 22507,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22508,
        "end_line": 22508,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22512,
        "end_line": 22512,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22513,
        "end_line": 22513,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22514,
        "end_line": 22514,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22516,
        "end_line": 22516,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22518,
        "end_line": 22518,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22536,
        "end_line": 22536,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22544,
        "end_line": 22544,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22550,
        "end_line": 22550,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22552,
        "end_line": 22552,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22572,
        "end_line": 22572,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22573,
        "end_line": 22573,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22577,
        "end_line": 22577,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22578,
        "end_line": 22578,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22590,
        "end_line": 22590,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22598,
        "end_line": 22598,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22619,
        "end_line": 22619,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22654,
        "end_line": 22654,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22673,
        "end_line": 22673,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22702,
        "end_line": 22702,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22710,
        "end_line": 22710,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22738,
        "end_line": 22738,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22747,
        "end_line": 22747,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22749,
        "end_line": 22749,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22761,
        "end_line": 22761,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22782,
        "end_line": 22782,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22784,
        "end_line": 22784,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22790,
        "end_line": 22790,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22792,
        "end_line": 22792,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22814,
        "end_line": 22814,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22816,
        "end_line": 22816,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22822,
        "end_line": 22822,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22824,
        "end_line": 22824,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22846,
        "end_line": 22846,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22852,
        "end_line": 22852,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22879,
        "end_line": 22879,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22892,
        "end_line": 22892,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22894,
        "end_line": 22894,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22906,
        "end_line": 22906,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22908,
        "end_line": 22908,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22924,
        "end_line": 22924,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22930,
        "end_line": 22930,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22947,
        "end_line": 22947,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22953,
        "end_line": 22953,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22986,
        "end_line": 22986,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 22992,
        "end_line": 22992,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23012,
        "end_line": 23012,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23018,
        "end_line": 23018,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23038,
        "end_line": 23038,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23044,
        "end_line": 23044,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23068,
        "end_line": 23068,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23074,
        "end_line": 23074,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23097,
        "end_line": 23097,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23103,
        "end_line": 23103,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23126,
        "end_line": 23126,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23132,
        "end_line": 23132,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23188,
        "end_line": 23188,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23247,
        "end_line": 23247,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23263,
        "end_line": 23263,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37911,
        "end_line": 37911,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23316,
        "end_line": 23316,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23330,
        "end_line": 23330,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23332,
        "end_line": 23332,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23334,
        "end_line": 23334,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23336,
        "end_line": 23336,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23430,
        "end_line": 23430,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23441,
        "end_line": 23441,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23444,
        "end_line": 23444,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23445,
        "end_line": 23445,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23544,
        "end_line": 23544,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23555,
        "end_line": 23555,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23558,
        "end_line": 23558,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23647,
        "end_line": 23647,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23820,
        "end_line": 23820,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23828,
        "end_line": 23828,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23830,
        "end_line": 23830,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23833,
        "end_line": 23833,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23843,
        "end_line": 23843,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23846,
        "end_line": 23846,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23886,
        "end_line": 23886,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23894,
        "end_line": 23894,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23900,
        "end_line": 23900,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23915,
        "end_line": 23915,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23944,
        "end_line": 23944,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23946,
        "end_line": 23946,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23950,
        "end_line": 23950,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23958,
        "end_line": 23958,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23965,
        "end_line": 23965,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23979,
        "end_line": 23979,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24088,
        "end_line": 24088,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24139,
        "end_line": 24139,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24225,
        "end_line": 24225,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24265,
        "end_line": 24265,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24278,
        "end_line": 24278,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24314,
        "end_line": 24314,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24325,
        "end_line": 24325,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24396,
        "end_line": 24396,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24463,
        "end_line": 24463,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24527,
        "end_line": 24527,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24593,
        "end_line": 24593,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24673,
        "end_line": 24673,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24753,
        "end_line": 24753,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24765,
        "end_line": 24765,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24803,
        "end_line": 24803,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24817,
        "end_line": 24817,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24871,
        "end_line": 24871,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24951,
        "end_line": 24951,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24958,
        "end_line": 24958,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 24970,
        "end_line": 24970,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25006,
        "end_line": 25006,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25026,
        "end_line": 25026,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25040,
        "end_line": 25040,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25488,
        "end_line": 25488,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25494,
        "end_line": 25494,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25495,
        "end_line": 25495,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25497,
        "end_line": 25497,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25499,
        "end_line": 25499,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25500,
        "end_line": 25500,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25548,
        "end_line": 25548,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25551,
        "end_line": 25551,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25608,
        "end_line": 25608,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25609,
        "end_line": 25609,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25627,
        "end_line": 25627,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25628,
        "end_line": 25628,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25629,
        "end_line": 25629,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25647,
        "end_line": 25647,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25648,
        "end_line": 25648,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25649,
        "end_line": 25649,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25650,
        "end_line": 25650,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25670,
        "end_line": 25670,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25690,
        "end_line": 25690,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25729,
        "end_line": 25729,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25737,
        "end_line": 25737,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25738,
        "end_line": 25738,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25767,
        "end_line": 25767,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25775,
        "end_line": 25775,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25827,
        "end_line": 25827,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25871,
        "end_line": 25871,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25907,
        "end_line": 25907,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25911,
        "end_line": 25911,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25935,
        "end_line": 25935,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25939,
        "end_line": 25939,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25946,
        "end_line": 25946,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25950,
        "end_line": 25950,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25951,
        "end_line": 25951,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 25971,
        "end_line": 25971,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26001,
        "end_line": 26001,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26002,
        "end_line": 26002,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26003,
        "end_line": 26003,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26004,
        "end_line": 26004,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26005,
        "end_line": 26005,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26319,
        "end_line": 26319,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26336,
        "end_line": 26336,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26355,
        "end_line": 26355,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26440,
        "end_line": 26440,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26444,
        "end_line": 26444,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26461,
        "end_line": 26461,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26465,
        "end_line": 26465,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26469,
        "end_line": 26469,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26578,
        "end_line": 26578,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26579,
        "end_line": 26579,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26583,
        "end_line": 26583,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26584,
        "end_line": 26584,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26842,
        "end_line": 26842,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 26863,
        "end_line": 26863,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27109,
        "end_line": 27109,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27127,
        "end_line": 27127,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27128,
        "end_line": 27128,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27142,
        "end_line": 27142,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27143,
        "end_line": 27143,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27483,
        "end_line": 27483,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27723,
        "end_line": 27723,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27733,
        "end_line": 27733,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27751,
        "end_line": 27751,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27755,
        "end_line": 27755,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27785,
        "end_line": 27785,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27787,
        "end_line": 27787,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27789,
        "end_line": 27789,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27793,
        "end_line": 27793,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27939,
        "end_line": 27939,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 27952,
        "end_line": 27952,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28012,
        "end_line": 28012,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28019,
        "end_line": 28019,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28045,
        "end_line": 28045,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28049,
        "end_line": 28049,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28050,
        "end_line": 28050,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28051,
        "end_line": 28051,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28052,
        "end_line": 28052,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28111,
        "end_line": 28111,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28115,
        "end_line": 28115,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28116,
        "end_line": 28116,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28117,
        "end_line": 28117,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28118,
        "end_line": 28118,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28217,
        "end_line": 28217,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28218,
        "end_line": 28218,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28219,
        "end_line": 28219,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28220,
        "end_line": 28220,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28221,
        "end_line": 28221,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28222,
        "end_line": 28222,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28223,
        "end_line": 28223,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28224,
        "end_line": 28224,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28264,
        "end_line": 28264,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28271,
        "end_line": 28271,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28280,
        "end_line": 28280,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28306,
        "end_line": 28306,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28307,
        "end_line": 28307,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28308,
        "end_line": 28308,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28309,
        "end_line": 28309,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28310,
        "end_line": 28310,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28322,
        "end_line": 28322,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28324,
        "end_line": 28324,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28330,
        "end_line": 28330,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28332,
        "end_line": 28332,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28333,
        "end_line": 28333,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28335,
        "end_line": 28335,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28439,
        "end_line": 28439,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28451,
        "end_line": 28451,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28452,
        "end_line": 28452,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28453,
        "end_line": 28453,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28463,
        "end_line": 28463,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28516,
        "end_line": 28516,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28590,
        "end_line": 28590,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28592,
        "end_line": 28592,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28593,
        "end_line": 28593,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28595,
        "end_line": 28595,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28620,
        "end_line": 28620,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28659,
        "end_line": 28659,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28801,
        "end_line": 28801,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28847,
        "end_line": 28847,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28851,
        "end_line": 28851,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28891,
        "end_line": 28891,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28892,
        "end_line": 28892,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28893,
        "end_line": 28893,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28897,
        "end_line": 28897,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28898,
        "end_line": 28898,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28899,
        "end_line": 28899,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28902,
        "end_line": 28902,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28908,
        "end_line": 28908,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28936,
        "end_line": 28936,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28950,
        "end_line": 28950,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28951,
        "end_line": 28951,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28953,
        "end_line": 28953,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28954,
        "end_line": 28954,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28956,
        "end_line": 28956,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28957,
        "end_line": 28957,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28971,
        "end_line": 28971,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 28972,
        "end_line": 28972,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29187,
        "end_line": 29187,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29214,
        "end_line": 29214,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29223,
        "end_line": 29223,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29408,
        "end_line": 29408,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29410,
        "end_line": 29410,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29411,
        "end_line": 29411,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29467,
        "end_line": 29467,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29500,
        "end_line": 29500,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29567,
        "end_line": 29567,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29601,
        "end_line": 29601,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29623,
        "end_line": 29623,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29642,
        "end_line": 29642,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29717,
        "end_line": 29717,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29775,
        "end_line": 29775,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 29955,
        "end_line": 29955,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30191,
        "end_line": 30191,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30207,
        "end_line": 30207,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30228,
        "end_line": 30228,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30253,
        "end_line": 30253,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30254,
        "end_line": 30254,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30261,
        "end_line": 30261,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30262,
        "end_line": 30262,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30318,
        "end_line": 30318,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30319,
        "end_line": 30319,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30325,
        "end_line": 30325,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30332,
        "end_line": 30332,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30334,
        "end_line": 30334,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30335,
        "end_line": 30335,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30336,
        "end_line": 30336,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30339,
        "end_line": 30339,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30345,
        "end_line": 30345,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30362,
        "end_line": 30362,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30365,
        "end_line": 30365,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30366,
        "end_line": 30366,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30368,
        "end_line": 30368,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30371,
        "end_line": 30371,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30375,
        "end_line": 30375,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30381,
        "end_line": 30381,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30393,
        "end_line": 30393,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30395,
        "end_line": 30395,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30397,
        "end_line": 30397,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30453,
        "end_line": 30453,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30469,
        "end_line": 30469,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30721,
        "end_line": 30721,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30736,
        "end_line": 30736,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30750,
        "end_line": 30750,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30764,
        "end_line": 30764,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30767,
        "end_line": 30767,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30799,
        "end_line": 30799,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30804,
        "end_line": 30804,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30808,
        "end_line": 30808,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30810,
        "end_line": 30810,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30812,
        "end_line": 30812,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30836,
        "end_line": 30836,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30856,
        "end_line": 30856,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30866,
        "end_line": 30866,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30868,
        "end_line": 30868,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30874,
        "end_line": 30874,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30888,
        "end_line": 30888,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30892,
        "end_line": 30892,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30894,
        "end_line": 30894,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 30898,
        "end_line": 30898,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31399,
        "end_line": 31399,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31442,
        "end_line": 31442,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31448,
        "end_line": 31448,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31456,
        "end_line": 31456,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31458,
        "end_line": 31458,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31484,
        "end_line": 31484,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31503,
        "end_line": 31503,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31517,
        "end_line": 31517,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31521,
        "end_line": 31521,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31523,
        "end_line": 31523,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31529,
        "end_line": 31529,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31530,
        "end_line": 31530,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31532,
        "end_line": 31532,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31533,
        "end_line": 31533,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31541,
        "end_line": 31541,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31547,
        "end_line": 31547,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31549,
        "end_line": 31549,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31551,
        "end_line": 31551,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31552,
        "end_line": 31552,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31558,
        "end_line": 31558,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31563,
        "end_line": 31563,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31569,
        "end_line": 31569,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31571,
        "end_line": 31571,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31573,
        "end_line": 31573,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31580,
        "end_line": 31580,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31582,
        "end_line": 31582,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31588,
        "end_line": 31588,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31597,
        "end_line": 31597,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31599,
        "end_line": 31599,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31601,
        "end_line": 31601,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31611,
        "end_line": 31611,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31613,
        "end_line": 31613,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31706,
        "end_line": 31706,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31731,
        "end_line": 31731,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31733,
        "end_line": 31733,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31743,
        "end_line": 31743,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31744,
        "end_line": 31744,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31829,
        "end_line": 31829,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31838,
        "end_line": 31838,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31839,
        "end_line": 31839,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31840,
        "end_line": 31840,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31844,
        "end_line": 31844,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31854,
        "end_line": 31854,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31855,
        "end_line": 31855,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31864,
        "end_line": 31864,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31865,
        "end_line": 31865,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 31995,
        "end_line": 31995,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32010,
        "end_line": 32010,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32012,
        "end_line": 32012,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32018,
        "end_line": 32018,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32026,
        "end_line": 32026,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32042,
        "end_line": 32042,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32044,
        "end_line": 32044,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32050,
        "end_line": 32050,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32077,
        "end_line": 32077,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32078,
        "end_line": 32078,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32079,
        "end_line": 32079,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32085,
        "end_line": 32085,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32097,
        "end_line": 32097,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32124,
        "end_line": 32124,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32125,
        "end_line": 32125,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32136,
        "end_line": 32136,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32194,
        "end_line": 32194,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32195,
        "end_line": 32195,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32244,
        "end_line": 32244,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32245,
        "end_line": 32245,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32280,
        "end_line": 32280,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32293,
        "end_line": 32293,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32298,
        "end_line": 32298,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32300,
        "end_line": 32300,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32314,
        "end_line": 32314,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32319,
        "end_line": 32319,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32321,
        "end_line": 32321,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32384,
        "end_line": 32384,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32385,
        "end_line": 32385,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32386,
        "end_line": 32386,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32393,
        "end_line": 32393,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32394,
        "end_line": 32394,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32783,
        "end_line": 32783,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32790,
        "end_line": 32790,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32791,
        "end_line": 32791,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32792,
        "end_line": 32792,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32887,
        "end_line": 32887,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32971,
        "end_line": 32971,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32976,
        "end_line": 32976,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32986,
        "end_line": 32986,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32987,
        "end_line": 32987,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32989,
        "end_line": 32989,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32996,
        "end_line": 32996,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32997,
        "end_line": 32997,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 32999,
        "end_line": 32999,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33019,
        "end_line": 33019,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33027,
        "end_line": 33027,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33046,
        "end_line": 33046,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33047,
        "end_line": 33047,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33054,
        "end_line": 33054,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33055,
        "end_line": 33055,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33130,
        "end_line": 33130,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33219,
        "end_line": 33219,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33223,
        "end_line": 33223,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33242,
        "end_line": 33242,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33370,
        "end_line": 33370,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33371,
        "end_line": 33371,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33372,
        "end_line": 33372,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33374,
        "end_line": 33374,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33382,
        "end_line": 33382,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33392,
        "end_line": 33392,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33418,
        "end_line": 33418,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33428,
        "end_line": 33428,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33429,
        "end_line": 33429,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33433,
        "end_line": 33433,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33449,
        "end_line": 33449,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33479,
        "end_line": 33479,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33489,
        "end_line": 33489,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33490,
        "end_line": 33490,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33492,
        "end_line": 33492,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33517,
        "end_line": 33517,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33526,
        "end_line": 33526,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33527,
        "end_line": 33527,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33531,
        "end_line": 33531,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33573,
        "end_line": 33573,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33585,
        "end_line": 33585,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33596,
        "end_line": 33596,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33605,
        "end_line": 33605,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33623,
        "end_line": 33623,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33710,
        "end_line": 33710,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33711,
        "end_line": 33711,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33713,
        "end_line": 33713,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33714,
        "end_line": 33714,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33716,
        "end_line": 33716,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33717,
        "end_line": 33717,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33737,
        "end_line": 33737,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33738,
        "end_line": 33738,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33739,
        "end_line": 33739,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33741,
        "end_line": 33741,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33742,
        "end_line": 33742,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33743,
        "end_line": 33743,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33745,
        "end_line": 33745,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33746,
        "end_line": 33746,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33747,
        "end_line": 33747,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33749,
        "end_line": 33749,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33750,
        "end_line": 33750,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33751,
        "end_line": 33751,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33817,
        "end_line": 33817,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33858,
        "end_line": 33858,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33862,
        "end_line": 33862,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33880,
        "end_line": 33880,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33893,
        "end_line": 33893,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33901,
        "end_line": 33901,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 33946,
        "end_line": 33946,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34143,
        "end_line": 34143,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34150,
        "end_line": 34150,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34225,
        "end_line": 34225,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34226,
        "end_line": 34226,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34227,
        "end_line": 34227,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34230,
        "end_line": 34230,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34231,
        "end_line": 34231,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34232,
        "end_line": 34232,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34233,
        "end_line": 34233,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34235,
        "end_line": 34235,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34236,
        "end_line": 34236,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34237,
        "end_line": 34237,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34240,
        "end_line": 34240,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34246,
        "end_line": 34246,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34393,
        "end_line": 34393,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34395,
        "end_line": 34395,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 38269,
        "end_line": 38269,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34399,
        "end_line": 34399,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34445,
        "end_line": 34445,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34468,
        "end_line": 34468,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34481,
        "end_line": 34481,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34482,
        "end_line": 34482,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34483,
        "end_line": 34483,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34484,
        "end_line": 34484,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34593,
        "end_line": 34593,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34599,
        "end_line": 34599,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34600,
        "end_line": 34600,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34601,
        "end_line": 34601,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34615,
        "end_line": 34615,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34630,
        "end_line": 34630,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34631,
        "end_line": 34631,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34632,
        "end_line": 34632,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34633,
        "end_line": 34633,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34691,
        "end_line": 34691,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34692,
        "end_line": 34692,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34756,
        "end_line": 34756,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34758,
        "end_line": 34758,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34760,
        "end_line": 34760,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34766,
        "end_line": 34766,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34768,
        "end_line": 34768,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34772,
        "end_line": 34772,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34793,
        "end_line": 34793,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34794,
        "end_line": 34794,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34818,
        "end_line": 34818,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34828,
        "end_line": 34828,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34832,
        "end_line": 34832,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34840,
        "end_line": 34840,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34849,
        "end_line": 34849,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34873,
        "end_line": 34873,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34940,
        "end_line": 34940,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34950,
        "end_line": 34950,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34954,
        "end_line": 34954,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34973,
        "end_line": 34973,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34974,
        "end_line": 34974,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34975,
        "end_line": 34975,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34981,
        "end_line": 34981,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34983,
        "end_line": 34983,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35516,
        "end_line": 35516,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35518,
        "end_line": 35518,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35522,
        "end_line": 35522,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35599,
        "end_line": 35599,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35605,
        "end_line": 35605,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35727,
        "end_line": 35727,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35731,
        "end_line": 35731,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35737,
        "end_line": 35737,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35739,
        "end_line": 35739,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35744,
        "end_line": 35744,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35760,
        "end_line": 35760,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35839,
        "end_line": 35839,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35841,
        "end_line": 35841,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35851,
        "end_line": 35851,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 35924,
        "end_line": 35924,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36048,
        "end_line": 36048,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36085,
        "end_line": 36085,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36089,
        "end_line": 36089,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36187,
        "end_line": 36187,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36234,
        "end_line": 36234,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36238,
        "end_line": 36238,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36239,
        "end_line": 36239,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36241,
        "end_line": 36241,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36243,
        "end_line": 36243,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36247,
        "end_line": 36247,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36250,
        "end_line": 36250,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36288,
        "end_line": 36288,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36331,
        "end_line": 36331,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36335,
        "end_line": 36335,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36336,
        "end_line": 36336,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36338,
        "end_line": 36338,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36340,
        "end_line": 36340,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36344,
        "end_line": 36344,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36347,
        "end_line": 36347,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36387,
        "end_line": 36387,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36391,
        "end_line": 36391,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36397,
        "end_line": 36397,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36401,
        "end_line": 36401,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36441,
        "end_line": 36441,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36442,
        "end_line": 36442,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36443,
        "end_line": 36443,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36455,
        "end_line": 36455,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36459,
        "end_line": 36459,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36480,
        "end_line": 36480,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36505,
        "end_line": 36505,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36510,
        "end_line": 36510,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36609,
        "end_line": 36609,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36689,
        "end_line": 36689,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36704,
        "end_line": 36704,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36712,
        "end_line": 36712,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36714,
        "end_line": 36714,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36727,
        "end_line": 36727,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36738,
        "end_line": 36738,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36751,
        "end_line": 36751,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36764,
        "end_line": 36764,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36777,
        "end_line": 36777,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36790,
        "end_line": 36790,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36802,
        "end_line": 36802,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36816,
        "end_line": 36816,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36832,
        "end_line": 36832,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36846,
        "end_line": 36846,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36863,
        "end_line": 36863,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36877,
        "end_line": 36877,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 36923,
        "end_line": 36923,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37099,
        "end_line": 37099,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37178,
        "end_line": 37178,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37331,
        "end_line": 37331,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37341,
        "end_line": 37341,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37354,
        "end_line": 37354,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37360,
        "end_line": 37360,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37366,
        "end_line": 37366,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37373,
        "end_line": 37373,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37384,
        "end_line": 37384,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37481,
        "end_line": 37481,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37506,
        "end_line": 37506,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37567,
        "end_line": 37567,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37619,
        "end_line": 37619,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37620,
        "end_line": 37620,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37621,
        "end_line": 37621,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37631,
        "end_line": 37631,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37632,
        "end_line": 37632,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37636,
        "end_line": 37636,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37637,
        "end_line": 37637,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37657,
        "end_line": 37657,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37666,
        "end_line": 37666,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37668,
        "end_line": 37668,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37669,
        "end_line": 37669,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37698,
        "end_line": 37698,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Function Call Object Injection Sink",
      "message": "Function Call Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37700,
        "end_line": 37700,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 37895,
        "end_line": 37895,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Variable Assigned to Object Injection Sink",
      "message": "Variable Assigned to Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 23315,
        "end_line": 23315,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 38188,
        "end_line": 38188,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Generic Object Injection Sink",
      "message": "Generic Object Injection Sink",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "juice-shop/frontend/src/assets/private/three.js:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855:security/detect-object-injection",
      "severity": "Unknown",
      "confidence": "Unknown",
      "scanner": {
        "id": "eslint",
        "name": "ESLint"
      },
      "location": {
        "file": "juice-shop/frontend/src/assets/private/three.js",
        "start_line": 34397,
        "end_line": 34397,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection",
          "url": "https://github.com/nodesecurity/eslint-plugin-security#detect-object-injection"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Loading of untrusted YAML can cause Remote Code Injection",
      "message": "Loading of untrusted YAML can cause Remote Code Injection",
      "description": "User controlled data in 'load()' function can result in Remote Code Injection.",
      "cve": "Loading of untrusted YAML can cause Remote Code Injection:const swaggerDocument = yaml.load(fs.readFileSync('./swagger.yml', 'utf8'));",
      "scanner": {
        "id": "nodejs_scan",
        "name": "NodeJsScan"
      },
      "location": {
        "file": "juice-shop/server.js",
        "start_line": 21,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "node_js_scan_id",
          "name": "NodeJsScan ID: 8",
          "value": "8"
        }
      ]
    },
    {
      "category": "sast",
      "name": "NoSQLi - NoSQL JavaScript Injection",
      "message": "NoSQLi - NoSQL JavaScript Injection",
      "description": "Untrusted User Input in Vulnerable Mongo DB functions can cause NoSQLi JavaScript Injection",
      "cve": "NoSQLi - NoSQL JavaScript Injection:    db.orders.find({ $where: \"this.orderId === '\" + req.params.id + \"'\" }).then(order =\u003e {",
      "scanner": {
        "id": "nodejs_scan",
        "name": "NodeJsScan"
      },
      "location": {
        "file": "juice-shop/routes/trackOrder.js",
        "start_line": 11,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "node_js_scan_id",
          "name": "NodeJsScan ID: 22",
          "value": "22"
        }
      ]
    },
    {
      "category": "sast",
      "name": "SQLi - SQL Injection",
      "message": "SQLi - SQL Injection",
      "description": "Untrusted User Input in RAW SQL Query can cause SQL Injection",
      "cve": "SQLi - SQL Injection:    models.sequelize.query('SELECT * FROM Users WHERE email = \\'' + (req.body.email || '') + '\\' AND password = \\'' + insecurity.hash(req.body.password || '') + '\\' AND deletedAt IS NULL', { model: models.User, plain: true }).",
      "scanner": {
        "id": "nodejs_scan",
        "name": "NodeJsScan"
      },
      "location": {
        "file": "juice-shop/routes/login.js",
        "start_line": 24,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "node_js_scan_id",
          "name": "NodeJsScan ID: 21",
          "value": "21"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Secret Hardcoded",
      "message": "Secret Hardcoded",
      "description": "A hardcoded secret was identified.",
      "cve": "Secret Hardcoded:exports.denyAll = () =\u003e expressJwt({ secret: '' + Math.random() });",
      "scanner": {
        "id": "nodejs_scan",
        "name": "NodeJsScan"
      },
      "location": {
        "file": "juice-shop/lib/insecurity.js",
        "start_line": 26,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "node_js_scan_id",
          "name": "NodeJsScan ID: 15",
          "value": "15"
        }
      ]
    },
    {
      "category": "sast",
      "name": "Weak Hash used - MD5",
      "message": "Weak Hash used - MD5",
      "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
      "cve": "Weak Hash used - MD5:exports.hash = data =\u003e crypto.createHash('md5').update(data).digest('hex');",
      "scanner": {
        "id": "nodejs_scan",
        "name": "NodeJsScan"
      },
      "location": {
        "file": "juice-shop/lib/insecurity.js",
        "start_line": 14,
        "dependency": {
          "package": {}
        }
      },
      "identifiers": [
        {
          "type": "node_js_scan_id",
          "name": "NodeJsScan ID: 12",
          "value": "12"
        }
      ]
    }
  ],
  "remediations": []
}
